# -*- coding: utf-8 -*-
"""Projeto_Integrador.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1hZDlQJgHOMBg4DJwUPqHJfrF3uryCxD4
"""

import mysql.connector
import getpass
from fpdf import FPDF

# Conexão com o banco de dados MySQL
db = mysql.connector.connect(
    host="protocolo.mysql.uhserver.com",
    user="projetopi",
    password="pr@jet@pi*1",
    database="protocolo"
)
cursor = db.cursor()

# Funções
def login():
    print("--- Login de Usuário ---")
    email = input("E-mail: ")
    senha = getpass.getpass("Senha: ")
    cursor.execute("SELECT * FROM usuarios WHERE email = %s AND senha = %s", (email, senha))
    usuario = cursor.fetchone()
    if usuario:
        print(f"Bem-vindo(a), {usuario[1]}!")
        return True
    else:
        print("Credenciais inválidas.")
        return False

def menu():
    print("\n--- Menu Principal ---")
    print("1. Listar protocolos")
    print("2. Adicionar protocolo")
    print("3. Editar protocolo")
    print("4. Deletar protocolo")
    print("5. Detalhes do protocolo")
    print("6. Relatórios em tela")
    print("7. Gerar relatório PDF")
    print("8. Sair")

def listar_protocolos():
    cursor.execute("SELECT id, numero, data, tipo, status FROM protocolos")
    for p in cursor.fetchall():
        print(f"ID: {p[0]} | Número: {p[1]} | Data: {p[2]} | Tipo: {p[3]} | Status: {p[4]}")

def adicionar_protocolo():
    numero = input("Número: ")
    data = input("Data (YYYY-MM-DD): ")
    tipo = input("Tipo (Protocolo, Ofício, Remessa): ")
    remetente = input("Remetente: ")
    destinatario = input("Destinatário: ")
    assunto = input("Assunto: ")
    status = input("Status (Pendente, Recebido, Finalizado): ")
    cursor.execute("INSERT INTO protocolos (numero, data, tipo, remetente, destinatario, assunto, status) VALUES (%s, %s, %s, %s, %s, %s, %s)",
                   (numero, data, tipo, remetente, destinatario, assunto, status))
    db.commit()
    print("Protocolo adicionado.")

def editar_protocolo():
    id = input("ID do protocolo: ")
    cursor.execute("SELECT * FROM protocolos WHERE id = %s", (id,))
    p = cursor.fetchone()
    if not p:
        print("Não encontrado.")
        return
    numero = input(f"Número ({p[1]}): ") or p[1]
    data = input(f"Data ({p[2]}): ") or p[2]
    tipo = input(f"Tipo ({p[3]}): ") or p[3]
    remetente = input(f"Remetente ({p[4]}): ") or p[4]
    destinatario = input(f"Destinatário ({p[5]}): ") or p[5]
    assunto = input(f"Assunto ({p[6]}): ") or p[6]
    status = input(f"Status ({p[7]}): ") or p[7]
    cursor.execute("UPDATE protocolos SET numero=%s, data=%s, tipo=%s, remetente=%s, destinatario=%s, assunto=%s, status=%s WHERE id=%s",
                   (numero, data, tipo, remetente, destinatario, assunto, status, id))
    db.commit()
    print("Atualizado.")

def deletar_protocolo():
    id = input("ID: ")
    cursor.execute("DELETE FROM protocolos WHERE id = %s", (id,))
    db.commit()
    print("Protocolo deletado.")

def detalhes_protocolo():
    id = input("ID: ")
    cursor.execute("SELECT * FROM protocolos WHERE id = %s", (id,))
    p = cursor.fetchone()
    if p:
        print(f"Número: {p[1]}\nData: {p[2]}\nTipo: {p[3]}\nRemetente: {p[4]}\nDestinatário: {p[5]}\nAssunto: {p[6]}\nStatus: {p[7]}")
    else:
        print("Não encontrado.")

def relatorios():
    cursor.execute("SELECT COUNT(*) FROM protocolos")
    total = cursor.fetchone()[0]
    cursor.execute("SELECT COUNT(*) FROM protocolos WHERE status = 'Pendente'")
    pendentes = cursor.fetchone()[0]
    cursor.execute("SELECT COUNT(*) FROM protocolos WHERE status = 'Recebido'")
    recebidos = cursor.fetchone()[0]
    cursor.execute("SELECT COUNT(*) FROM protocolos WHERE status = 'Finalizado'")
    finalizados = cursor.fetchone()[0]
    cursor.execute("SELECT tipo, COUNT(*) FROM protocolos GROUP BY tipo")
    tipos = cursor.fetchall()

    print(f"Total: {total}\nPendentes: {pendentes}\nRecebidos: {recebidos}\nFinalizados: {finalizados}")
    print("Por tipo:")
    for t in tipos:
        print(f"  {t[0]}: {t[1]}")

def gerar_pdf():
    pdf = FPDF()
    pdf.add_page()
    pdf.set_font("Arial", size=12)
    pdf.cell(200, 10, "Relatório de Protocolos", ln=True, align='C')
    cursor.execute("SELECT numero, data, tipo, remetente, destinatario, status FROM protocolos")
    for row in cursor.fetchall():
        linha = f"Número: {row[0]}, Data: {row[1]}, Tipo: {row[2]}, Remetente: {row[3]}, Destinatário: {row[4]}, Status: {row[5]}"
        pdf.multi_cell(0, 10, linha)
    pdf.output("relatorio_protocolos.pdf")
    print("Relatório PDF gerado como 'relatorio_protocolos.pdf'.")

# Execução principal
if login():
    while True:
        menu()
        op = input("Opção: ")
        if op == "1":
            listar_protocolos()
        elif op == "2":
            adicionar_protocolo()
        elif op == "3":
            editar_protocolo()
        elif op == "4":
            deletar_protocolo()
        elif op == "5":
            detalhes_protocolo()
        elif op == "6":
            relatorios()
        elif op == "7":
            gerar_pdf()
        elif op == "8":
            print("Saindo.")
            break
        else:
            print("Opção inválida.")
else:
    print("Encerrando.")